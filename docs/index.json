[
  {
    "__docId__": 0,
    "kind": "file",
    "name": "lib/mlr.mjs",
    "content": "import { TensorScriptModelInterface, } from '@tensorscript/core';\r\n\r\n/**\r\n * base class for tensorscript models\r\n * @interface TensorScriptModelInterface\r\n * @property {Object} settings - tensorflow model hyperparameters\r\n * @property {Object} model - tensorflow model\r\n * @property {Object} tf - tensorflow / tensorflow-node / tensorflow-node-gpu\r\n */\r\nexport class MultipleLinearRegression extends TensorScriptModelInterface {\r\n  constructor(options = {}, customTF) {\r\n    const config = Object.assign({\r\n      epochs:500,\r\n    }, options);\r\n    super(config, customTF);\r\n    return this;\r\n  }\r\n  /**\r\n   * asynchronously trains tensorflow model, must be implemented by tensorscript class\r\n   * @param x_matrix - independent variables\r\n   * @param y_matrix - dependent variables\r\n   * @return {Object} returns trained tensorflow model \r\n   */\r\n  async train(x_matrix, y_matrix) {\r\n    // console.log({ x_matrix });\r\n    const xShape = this.getInputShape(x_matrix);\r\n    const yShape = this.getInputShape(y_matrix);\r\n    const xs = this.tf.tensor(x_matrix, xShape);\r\n    const ys = this.tf.tensor(y_matrix, yShape);\r\n    this.model = this.tf.sequential();\r\n    this.model.add(this.tf.layers.dense({ units: yShape[1], inputShape: [xShape[1],], }));\r\n    this.model.compile({\r\n      loss: 'meanSquaredError',\r\n      optimizer: 'sgd',\r\n    });\r\n    await this.model.fit(xs, ys, this.settings);\r\n    xs.dispose();\r\n    ys.dispose();\r\n    return this.model;\r\n  }\r\n  /**\r\n   * predicts new dependent variables\r\n   * @param matrix - new test independent variables\r\n   * @return {Promise} returns tensorflow prediction \r\n   */\r\n  predict(input_matrix) {\r\n    const predictionInput = (Array.isArray(input_matrix[ 0 ]))\r\n      ? input_matrix\r\n      : [ input_matrix, ];\r\n    const predictionTensor = this.tf.tensor(predictionInput);\r\n    const prediction = this.model.predict(predictionTensor);\r\n    predictionTensor.dispose();\r\n    return prediction;\r\n  }\r\n}",
    "static": true,
    "longname": "/Users/yawjosephetse/Developer/github/repetere/ts-mlr/lib/mlr.mjs",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1,
    "kind": "class",
    "name": "MultipleLinearRegression",
    "memberof": "lib/mlr.mjs",
    "static": true,
    "longname": "lib/mlr.mjs~MultipleLinearRegression",
    "access": "public",
    "export": true,
    "importPath": "@tensorscript/ts-mlr/lib/mlr.mjs",
    "importStyle": "{MultipleLinearRegression}",
    "description": "base class for tensorscript models",
    "lineNumber": 10,
    "properties": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "settings",
        "description": "tensorflow model hyperparameters"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "model",
        "description": "tensorflow model"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "tf",
        "description": "tensorflow / tensorflow-node / tensorflow-node-gpu"
      }
    ],
    "interface": false,
    "extends": [
      "@tensorscript/core~TensorScriptModelInterface"
    ]
  },
  {
    "__docId__": 2,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "lib/mlr.mjs~MultipleLinearRegression",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/mlr.mjs~MultipleLinearRegression#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true
  },
  {
    "__docId__": 3,
    "kind": "method",
    "name": "train",
    "memberof": "lib/mlr.mjs~MultipleLinearRegression",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "lib/mlr.mjs~MultipleLinearRegression#train",
    "access": "public",
    "description": "asynchronously trains tensorflow model, must be implemented by tensorscript class",
    "lineNumber": 24,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "x_matrix",
        "description": "independent variables"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "y_matrix",
        "description": "dependent variables"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "returns trained tensorflow model"
    }
  },
  {
    "__docId__": 4,
    "kind": "member",
    "name": "model",
    "memberof": "lib/mlr.mjs~MultipleLinearRegression",
    "static": false,
    "longname": "lib/mlr.mjs~MultipleLinearRegression#model",
    "access": "public",
    "description": null,
    "lineNumber": 30,
    "undocument": true
  },
  {
    "__docId__": 5,
    "kind": "method",
    "name": "predict",
    "memberof": "lib/mlr.mjs~MultipleLinearRegression",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/mlr.mjs~MultipleLinearRegression#predict",
    "access": "public",
    "description": "predicts new dependent variables",
    "lineNumber": 46,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "matrix",
        "description": "new test independent variables"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "returns tensorflow prediction"
    }
  },
  {
    "kind": "index",
    "content": "# @tensorscript/ts-mlr\n\n[![Coverage Status](https://coveralls.io/repos/github/repetere/ts-mlr/badge.svg?branch=master)](https://coveralls.io/github/repetere/ts-mlr?branch=master) [![Build Status](https://travis-ci.org/repetere/ts-mlr.svg?branch=master)](https://travis-ci.org/repetere/ts-mlr)\n\nMachine Learning tools built with Tensorflow\n### [Full Documentation](https://github.com/repetere/@tensorscript/ts-mlr/blob/master/docs/API.md)\n\n### Installation\n\n```sh\n$ npm i @tensorscript/ts-mlr\n```\n\n\n### Testing\n\n```sh\n$ npm i\n$ npm test\n```\n\n### Contributing\n\nFork, write tests and create a pull request!\n\n### Misc\n\nAs of Node 8, ES modules are still used behind a flag, when running natively as an ES module\n\n```sh\n$ node --experimental-modules my-machine-learning-script.mjs\n# Also there are native bindings that require Python 2.x, make sure if you're using Andaconda, you build with your Python 2.x bin\n$ npm i --python=/usr/bin/python\n ```\n\nLicense\n----\n\nMIT",
    "longname": "/Users/yawjosephetse/Developer/github/repetere/ts-mlr/README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  }
]